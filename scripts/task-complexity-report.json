{
  "meta": {
    "generatedAt": "2025-05-21T11:33:20.929Z",
    "tasksAnalyzed": 14,
    "thresholdScore": 5,
    "projectName": "Taskmaster",
    "usedResearch": true
  },
  "complexityAnalysis": [
    {
      "taskId": 1,
      "taskTitle": "프로젝트 초기 설정 및 개발 환경 구성",
      "complexityScore": 7,
      "recommendedSubtasks": 6,
      "expansionPrompt": "프로젝트 초기 설정의 각 단계를 세분화하고, 프론트엔드와 백엔드 설정, API 통합, 그리고 개발 환경 구성에 대한 상세 작업을 나열하세요.",
      "reasoning": "다양한 기술 스택과 API 통합이 필요하며, 프론트엔드와 백엔드 설정, 개발 환경 구성 등 여러 복잡한 단계가 포함되어 있습니다."
    },
    {
      "taskId": 3,
      "taskTitle": "Gemini API를 이용한 텍스트 분석 및 전처리 시스템 구현",
      "complexityScore": 8,
      "recommendedSubtasks": 5,
      "expansionPrompt": "Gemini API를 활용한 텍스트 분석 시스템의 주요 구성 요소를 나열하고, 각 요소의 구현 단계를 상세히 설명하세요.",
      "reasoning": "고급 AI 모델을 활용한 복잡한 텍스트 분석, 대용량 데이터 처리, 그리고 구조화된 출력 생성이 요구되는 고난도 작업입니다."
    },
    {
      "taskId": 4,
      "taskTitle": "Gemini API를 이용한 인물-음성 매칭 시스템 구현",
      "complexityScore": 7,
      "recommendedSubtasks": 4,
      "expansionPrompt": "인물-음성 매칭 시스템의 주요 기능을 나열하고, Gemini API와 Typecast API를 통합하는 과정을 단계별로 설명하세요.",
      "reasoning": "두 개의 외부 API를 통합하고, 복잡한 매칭 알고리즘을 개발해야 하며, 사용자 인터페이스 설계도 포함되어 있습니다."
    },
    {
      "taskId": 5,
      "taskTitle": "Typecast API를 이용한 음성 생성 시스템 구현",
      "complexityScore": 6,
      "recommendedSubtasks": 4,
      "expansionPrompt": "Typecast API를 활용한 음성 생성 시스템의 핵심 기능을 나열하고, 각 기능의 구현 방법을 상세히 설명하세요.",
      "reasoning": "외부 API 통합, 복잡한 파라미터 관리, 그리고 오디오 파일 처리가 필요하지만, 이전 작업들에 비해 상대적으로 직관적인 구현이 가능합니다."
    },
    {
      "taskId": 6,
      "taskTitle": "ElevenLabs API를 이용한 효과음 생성 시스템 구현",
      "complexityScore": 5,
      "recommendedSubtasks": 3,
      "expansionPrompt": "ElevenLabs API를 사용한 효과음 생성 시스템의 주요 구성 요소를 나열하고, 각 요소의 구현 단계를 설명하세요.",
      "reasoning": "API 통합과 효과음 생성 로직이 필요하지만, 이전 작업들의 경험을 활용할 수 있어 상대적으로 복잡도가 낮습니다."
    },
    {
      "taskId": 7,
      "taskTitle": "기본 웹 인터페이스 구현",
      "complexityScore": 5,
      "recommendedSubtasks": 3,
      "expansionPrompt": "React를 사용한 웹 인터페이스의 주요 페이지와 컴포넌트를 나열하고, 각 요소의 구현 방법을 설명하세요.",
      "reasoning": "React를 사용한 기본적인 웹 개발 작업으로, 복잡한 로직보다는 UI/UX 설계와 구현에 초점이 맞춰져 있습니다."
    },
    {
      "taskId": 8,
      "taskTitle": "오디오북 재생 플레이어 개발",
      "complexityScore": 7,
      "recommendedSubtasks": 4,
      "expansionPrompt": "오디오북 재생 플레이어의 핵심 기능을 나열하고, 각 기능의 구현 방법과 필요한 기술을 상세히 설명하세요.",
      "reasoning": "오디오 처리, 텍스트-오디오 동기화, 그리고 복잡한 사용자 인터페이스 구현이 요구되는 고난도 작업입니다."
    },
    {
      "taskId": 9,
      "taskTitle": "오디오북 편집 기능 구현",
      "complexityScore": 8,
      "recommendedSubtasks": 4,
      "expansionPrompt": "오디오북 편집 기능의 주요 구성 요소를 나열하고, 각 요소의 구현 방법과 필요한 기술을 상세히 설명하세요.",
      "reasoning": "복잡한 사용자 인터페이스, 실시간 오디오 처리, API 통합, 그리고 상태 관리가 필요한 고난도 작업입니다."
    },
    {
      "taskId": 10,
      "taskTitle": "청크 처리 및 컨텍스트 관리 시스템 구현",
      "complexityScore": 9,
      "recommendedSubtasks": 5,
      "expansionPrompt": "청크 처리 및 컨텍스트 관리 시스템의 핵심 구성 요소를 나열하고, 각 요소의 구현 방법과 알고리즘을 상세히 설명하세요.",
      "reasoning": "복잡한 텍스트 처리 알고리즘, 컨텍스트 관리 로직, 그리고 대용량 데이터 처리가 요구되는 매우 복잡한 작업입니다."
    },
    {
      "taskId": 11,
      "taskTitle": "오디오 파일 통합 및 최종 오디오북 생성",
      "complexityScore": 6,
      "recommendedSubtasks": 3,
      "expansionPrompt": "오디오 파일 통합 및 최종 오디오북 생성 과정의 주요 단계를 나열하고, 각 단계의 구현 방법을 설명하세요.",
      "reasoning": "오디오 파일 처리와 메타데이터 관리가 필요하지만, 이전 작업들의 결과를 활용할 수 있어 상대적으로 복잡도가 낮습니다."
    },
    {
      "taskId": 12,
      "taskTitle": "프로젝트 저장 및 관리 시스템 구현",
      "complexityScore": 5,
      "recommendedSubtasks": 3,
      "expansionPrompt": "프로젝트 저장 및 관리 시스템의 주요 기능을 나열하고, 각 기능의 구현 방법과 필요한 기술을 설명하세요.",
      "reasoning": "데이터베이스 설계와 기본적인 CRUD 작업이 주를 이루는 작업으로, 복잡한 로직보다는 데이터 구조 설계에 초점이 맞춰져 있습니다."
    },
    {
      "taskId": 13,
      "taskTitle": "API 사용량 최적화 및 비용 관리 시스템 구현",
      "complexityScore": 7,
      "recommendedSubtasks": 4,
      "expansionPrompt": "API 사용량 최적화 및 비용 관리 시스템의 핵심 구성 요소를 나열하고, 각 요소의 구현 방법과 최적화 전략을 상세히 설명하세요.",
      "reasoning": "복잡한 모니터링 로직, 최적화 알고리즘, 그리고 여러 API의 통합 관리가 요구되는 고난도 작업입니다."
    },
    {
      "taskId": 14,
      "taskTitle": "병렬 처리 및 성능 최적화",
      "complexityScore": 8,
      "recommendedSubtasks": 4,
      "expansionPrompt": "병렬 처리 및 성능 최적화 시스템의 주요 구성 요소를 나열하고, 각 요소의 구현 방법과 최적화 전략을 상세히 설명하세요.",
      "reasoning": "복잡한 병렬 처리 알고리즘, 작업 큐 관리, 그리고 전체 시스템의 성능 최적화가 요구되는 매우 복잡한 작업입니다."
    },
    {
      "taskId": 15,
      "taskTitle": "테스트 및 배포 파이프라인 구축",
      "complexityScore": 7,
      "recommendedSubtasks": 4,
      "expansionPrompt": "테스트 및 배포 파이프라인의 주요 구성 요소를 나열하고, 각 요소의 구현 방법과 자동화 전략을 상세히 설명하세요.",
      "reasoning": "다양한 테스트 유형 구현, CI/CD 파이프라인 구축, 그리고 모니터링 시스템 설정이 필요한 복잡한 작업입니다."
    }
  ]
}