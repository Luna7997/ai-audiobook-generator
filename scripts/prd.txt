<context>
# Overview  
다중 화자 오디오북 생성 시스템은 소설 텍스트를 다양한 음성과 효과음이 포함된 풍부한 오디오북으로 변환하는 웹 기반 애플리케이션입니다. 이 시스템은 AI 기술을 활용하여 등장인물의 대화, 감정, 어조를 분석하고, 각 인물에게 적합한 음성을 할당하여 몰입감 있는 오디오북 경험을 제공합니다. 이 프로젝트는 시각 장애인, 독서 시간이 부족한 사람들, 오디오 형식의 콘텐츠를 선호하는 사용자들을 위해 설계되었습니다.

# Core Features  
- 텍스트 분석 및 전처리: Gemini 2.5 Flash 모델을 활용하여 소설 텍스트를 분석하고 대사, 내레이션, 효과음 등으로 구조화
- 인물-음성 매칭: Gemini 2.5 Pro 모델을 사용하여 등장인물 특성에 맞는 Typecast API의 음성 선택
- 다중 화자 음성 합성: Typecast API를 활용하여 각 등장인물 및 내레이터에 적합한 음성으로 오디오 생성
- 효과음 생성: ElevenLabs API를 활용하여 소설 속 효과음을 사실적으로 구현
- 오디오북 편집 및 재생: 생성된 오디오북을 재생하고 개별 대사나 효과음을 편집할 수 있는 인터페이스 제공

# User Experience  
- 대상 사용자: 오디오북 애호가, 시각 장애인, 바쁜 독자, 콘텐츠 제작자
- 주요 사용자 흐름: 소설 텍스트 업로드 > 자동 분석 및 처리 > 음성 매칭 검토/조정 > 오디오북 생성 > 재생 및 편집
- UI/UX 고려사항: 텍스트와 오디오가 함께 표시되는 직관적인 인터페이스, 각 대사/효과음 별 재생 및 편집 기능, 접근성 우선 디자인, 사용자 참여 가능한 편집 옵션
</context>
<PRD>
# Technical Architecture  
- 시스템 구성 요소:
  - 프론트엔드: React 기반 웹 인터페이스
  - 백엔드: Python Flask API 서버
  - 텍스트 분석 엔진: Gemini 2.5 Flash 모델 (프롬프트 엔지니어링)
  - 인물-음성 매칭 엔진: Gemini 2.5 Pro 모델
  - 음성 합성 서비스: Typecast API
  - 효과음 생성 서비스: ElevenLabs API
  - 데이터베이스: MongoDB (텍스트 분석 결과, 오디오 메타데이터 저장)
  - 파일 저장소: AWS S3 또는 유사 서비스 (원본 텍스트 및 생성된 오디오 파일)

- 데이터 모델:
  - 프로젝트: 사용자, 원본 텍스트, 분석 결과, 생성된 오디오 참조
  - 텍스트 분석 결과: JSON 구조화된 문장별 분석 (대화, 내레이션, 효과음 분류)
  - 인물 정보: 등장인물별 특성 및 매칭된 음성 정보
  - 오디오 세그먼트: 생성된 개별 오디오 파일 참조 및 메타데이터
  - 사용자 편집 기록: 사용자가 조정한 음성 설정 및 재생성 이력

- API 및 통합:
  - Gemini API: 텍스트 분석 및 인물-음성 매칭
  - Typecast API: 다양한 음성 캐릭터로 대사 및 내레이션 생성
  - ElevenLabs API: 효과음 생성
  - 내부 REST API: 프론트엔드와 백엔드 간 통신

# Development Roadmap  
- MVP (최소 기능 제품):
  - 소설 텍스트 업로드 및 기본 분석 기능 (Gemini 2.5 Flash)
  - 텍스트 청크 분할 시스템 (긴 소설 처리용)
  - 기본 인물-음성 자동 매칭 (Gemini 2.5 Pro)
  - Typecast API 기본 통합 및 음성 생성
  - 간단한 효과음 생성 (ElevenLabs)
  - 기본 오디오북 재생 인터페이스

- 추가 기능 개선:
  - 고급 텍스트 분석 (문맥 이해도 강화)
  - 인물-음성 매칭 사용자 정의 기능
  - 음성 파라미터 세부 조정 기능 (속도, 톤, 감정 등)
  - 고급 효과음 및 배경음악 통합
  - 텍스트-오디오 동기화 개선
  - 사용자 오디오 라이브러리 관리
  - 다국어 지원 확장

# Logical Dependency Chain
- 기반 시스템:
  1. 텍스트 업로드 및 저장 시스템
  2. Gemini 모델 통합 및 프롬프트 엔지니어링 완성
  3. 텍스트 분석 파이프라인 구축
  4. 인물 정보 추출 및 정리 시스템

- 음성 처리 시스템:
  1. Typecast API 연동
  2. 인물-음성 매칭 알고리즘 구현
  3. ElevenLabs API 연동
  4. 효과음 생성 시스템 구축

- 사용자 경험:
  1. 기본 웹 인터페이스 구축
  2. 오디오북 재생 플레이어 개발
  3. 음성 및 효과음 편집 기능 구현
  4. 텍스트-오디오 동기화 표시 시스템

- 시스템 통합:
  1. 텍스트 분석 결과를 음성 생성 파이프라인과 연결
  2. 개별 음성 및 효과음 파일 통합 관리
  3. 사용자 편집 내용 반영 시스템

# Risks and Mitigations  
- 기술적 과제:
  - API 처리 한계: 대용량 텍스트 처리 → 효율적인 청크 분할 및 순차 처리
  - 인물-음성 부적절한 매칭: → 사용자 검토 및 수정 프로세스 추가
  - 효과음 품질 문제: → 다양한 프롬프트 실험 및 최적화

- 성능 과제:
  - 오디오 생성 시간: → 병렬 처리 및 백그라운드 작업 큐 구현
  - 대용량 오디오 파일 처리: → 스트리밍 재생 및 점진적 로딩 구현

- API 제한 및 비용:
  - Gemini, Typecast, ElevenLabs API 사용량/비용: → 캐싱 전략 및 효율적인 API 호출 설계
  - API 할당량 초과: → 요청 대기열 및 속도 제한 구현

- 품질 확보:
  - 음성 합성 자연스러움: → 파라미터 최적화 및 사용자 편집 옵션
  - 효과음 적절성: → 다양한 효과음 템플릿 및 사전 정의 라이브러리 구축

# Appendix  
- JSON 구조 예시:
  ```json
  [
    {
      "order": 1,
      "type": "dialogue",
      "speaker": "캐릭터명",
      "text": "실제 텍스트",
      "emotion": "기쁨|슬픔|공포|분노|혐오|놀람|중립",
      "tone": "어조 태그",
      "expression_guide": "감정과 어조를 자연어로 상세히 설명"
    }
  ]
  ```

- 텍스트 분석 프롬프트:
  - 소설 텍스트 구조적 분석을 위한 프롬프트 구조
  - 인물 특성 추출 및 정리를 위한 프롬프트 구조
  - 추가 청크 처리를 위한 컨텍스트 유지 프롬프트

- API 통합 명세:
  - Gemini API 파라미터 및 응답 형식
  - Typecast API 활용 가능한 음성 목록 및 특성
  - ElevenLabs 효과음 생성 파라미터

- 텍스트 전처리 파이프라인:
  - 소설 텍스트 정제 과정
  - 문장 및 대화 분리 알고리즘
  - 인물 대사 및 감정 추출 로직
</PRD> 